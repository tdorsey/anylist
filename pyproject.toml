[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=67.0", "setuptools_scm[toml]>=7.1"]

[project]
authors = [{"name" = "Tommy Dorsey"}]
description = "a wrapper for the AnyList api, written in Python"
dynamic = ["version"]
license = {"file" = "LICENSE"}
name = "anylist"
readme = {file = "README.md", content-type = "text/markdown"}
dependencies = [
  "aiosqlite",
  "alembic",
  "asyncpg",
  "celery",
  "dogpile.cache",
  "fastapi",
  "jinja2",
  "psycopg2-binary",
  "pydantic~=2.0",
  "pydantic-settings",
  "QuasiQueue",
  "SQLAlchemy",
  "redis",
  "typer"
]

[project.optional-dependencies]
dev = [
  "build",
  "dapperdata",
  "glom",
  "mypy",
  "paracelsus",
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-pretty",
  "ruamel.yaml",
  "ruff",
  "toml-sort",
  "uv"
]

[project.scripts]
anylist = "anylist.cli:app"

[tool.coverage.run]
omit = [
  "./anylist/_version.py",
  "./anylist/__init__.py",
  "./tests/*"
]
concurrency = ["thread", "greenlet"]

[tool.mypy]
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
exclude = [".venv", "./anylist/_version.py"]
line-length = 120

[tool.setuptools.dynamic]
readme = {file = ["README.md"]}

[tool.setuptools.package-data]
anylist = ["py.typed"]

[tool.setuptools.packages]
find = {}

[tool.setuptools_scm]
fallback_version = "0.0.0-dev"
write_to = "anylist/_version.py"
