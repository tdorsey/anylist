name: Security Audit

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run security audit weekly on Mondays at 2 AM UTC
    - cron: '0 2 * * 1'

env:
  NODE_VERSION: '20.x'

jobs:
  security-audit:
    name: 'Security Audit'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Run npm audit
      run: |
        # Run npm audit and capture output
        if ! npm audit --audit-level moderate; then
          echo "⚠️ Security vulnerabilities found!"
          echo "## Security Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          npm audit >> $GITHUB_STEP_SUMMARY || true
          echo "```" >> $GITHUB_STEP_SUMMARY
          echo "Please review and fix security vulnerabilities." >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "✅ No security vulnerabilities found"
          echo "## Security Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "✅ No security vulnerabilities found at moderate level or above." >> $GITHUB_STEP_SUMMARY
        fi
      
    - name: Check for outdated dependencies
      run: |
        echo "## Dependency Status" >> $GITHUB_STEP_SUMMARY
        echo "```" >> $GITHUB_STEP_SUMMARY
        npm outdated >> $GITHUB_STEP_SUMMARY || echo "All dependencies are up to date" >> $GITHUB_STEP_SUMMARY
        echo "```" >> $GITHUB_STEP_SUMMARY
        
    # Optional: Use GitHub's dependency review action for PRs
    - name: Dependency Review
      if: github.event_name == 'pull_request'
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
        comment-summary-in-pr: true